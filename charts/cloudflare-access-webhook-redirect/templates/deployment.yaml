apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
        {{- with .Values.securityContext }}
          securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.application.server.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" . }}
          env:
            - name: CLOUDFLARE.CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.secretName" . }}
                  key: client_id
            - name: CLOUDFLARE.CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "common.secretName" . }}
                  key: client_secret
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
          {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
        {{- end }}
        {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
          volumeMounts:
        {{- if .Values.securityContext.readOnlyRootFilesystem }}
            - name: tmp
              mountPath: /tmp
        {{- end }}
        {{- with .Values.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "common.fullname" . }}
      {{- if .Values.securityContext.readOnlyRootFilesystem }}
        - name: tmp
          emptyDir: {}
      {{- end }}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

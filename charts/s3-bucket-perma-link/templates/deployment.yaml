apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
       {{- with .Values.securityContext }}
          securityContext:
         {{- toYaml . | nindent 10 }}
       {{- end }}
          ports:
            - name: port
              containerPort: {{ .Values.application.server.port }}
          livenessProbe:
            httpGet:
              path: /health
              port: port
          startupProbe:
            httpGet:
              path: /health
              port: port
          readinessProbe:
            httpGet:
              path: /health
              port: port
          resources:
            {{- with .Values.resources.requests }}
            requests:
              {{- with .cpu}}
              cpu: {{ . | quote }}
              {{- end }}
              {{- with .memory}}
              memory: {{ . | quote }}
              {{- end }}
            {{- end }}
            {{- with .Values.resources.limits }}
            limits:
              {{- with .cpu}}
              cpu: {{ . | quote }}
                {{- end }}
                {{- with .memory}}
              memory: {{ . | quote }}
                {{- end }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" . }}
          env:
            - name: S3.ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: {{ include "s3-bucket-perma-link.s3-secretName" . }}
            - name: S3.SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: {{ include "s3-bucket-perma-link.s3-secretName" . }}
